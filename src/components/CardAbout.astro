---
interface Props{
  icon_url: string;
  title: string;
}

const { icon_url, title } = Astro.props;
---

<div>
  <img src={icon_url} alt={title} />
  <h1>{title}</h1>
</div>

<style>
  div {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 180px;
    height: 240px;
    border: solid  4px var(--white-light);
    border-radius: 12px;
    transition: all 0.5s;
  }

  img {
    width: 60px;
    height: 60px;
    justify-self: end;
    align-items: center;
  }

  h1 {
    font-size: 2.4rem;
    font-weight: 600;
    letter-spacing: 2px;
  }

  div:hover > img {
    filter: drop-shadow(0 0 0.75rem var(--white-light));
  }

  div:hover > h1 {
    text-shadow: 0 0 0.75rem var(--white-light);
  }

  /*For animation*/
  div:hover{
    cursor: default;
    transform: scale(1.1);
    --border-angle: 0turn;
    --main-bg: conic-gradient(
        from var(--border-angle),
        var(--background-color) 0%,
        var(--background-color)5%,
        var(--background-color) 60%,
        var(--background-color) 95%
      );
    
    border: solid 5px transparent;
    border-radius: 2em;
    --gradient-border: conic-gradient(from var(--border-angle), transparent 25%, var(--white-light), var(--white-light) 99%, transparent);
    
    background: 
      var(--main-bg) padding-box,
      var(--gradient-border) border-box, 
      var(--main-bg) border-box;

    animation: bg-spin 3s linear infinite;
  }

  @keyframes bg-spin {
    to {
      --border-angle: 1turn;
    }
  }


@property --border-angle {
  syntax: "<angle>";
  inherits: true;
  initial-value: 0turn;
}

</style>